
using System.Net;

public static async Task<HttpResponseMessage> Run(HttpRequestMessage req, TraceWriter log)
{
    log.Info($"C# HTTP trigger function processed a request. RequestUri={req.RequestUri}");

    // parse query parameter
    string make = req.GetQueryNameValuePairs()
        .FirstOrDefault(q => string.Compare(q.Key, "make", true) == 0)
        .Value;

    // Get request body
    dynamic data = await req.Content.ReadAsAsync<object>();

    // Set name to query string or body data
    make = make ?? data?.make;

    if(make == null)
         return req.CreateResponse(HttpStatusCode.BadRequest, "Please pass a car make (make param, like make=Chevrolet) on the query string or in the request body");
    
    
    List<Vehicle> listOfVehicles = new List<Vehicle>();
    
    Vehicle vehicle1 = new Vehicle();
    vehicle1.Make = "Chevrolet";
    vehicle1.Model = "Camaro";
    listOfVehicles.Add(vehicle1);
    
    Vehicle vehicle2 = new Vehicle();
    vehicle2.Make = "Chevrolet";
    vehicle2.Model = "Tahoe";
    listOfVehicles.Add(vehicle2);
    
    Vehicle vehicle3 = new Vehicle();
    vehicle3.Make = "Ford";
    vehicle3.Model = "Mustang";
    listOfVehicles.Add(vehicle3);
    
    var requestedVehicles = from vehicle in listOfVehicles
                            where vehicle.Make == make
                            select vehicle;
    
    IEnumerable<Vehicle> enumerableListOfVehicles = requestedVehicles;
    
    return req.CreateResponse(HttpStatusCode.OK, enumerableListOfVehicles);
    
}

public class Vehicle
{
    public string Make { get; set; }

    public string Model { get; set; }
}